PROJECT (spsim)



FIND_PATH (SPIMAGE_INCLUDE_DIR spimage.h PATHS ENV SPIMAGE_INC NO_DEFAULT_PATH)
FIND_PATH (SPIMAGE_INCLUDE_DIR spimage.h PATHS /usr/include /sw/include ENV SPIMAGE_INC)
FIND_PATH (TIFF_INCLUDE_DIR tiff.h PATHS ENV TIFF_INC NO_DEFAULT_PATH)
FIND_PATH (TIFF_INCLUDE_DIR tiff.h PATHS /usr/include /sw/include)
FIND_PATH (HDF5_INCLUDE_DIR hdf5.h ENV HDF5_INC NO_DEFAULT_PATH)
FIND_PATH (HDF5_INCLUDE_DIR hdf5.h PATHS /usr/include /sw/include)
FIND_PATH (FFTW3_INCLUDE_DIR fftw3.h PATHS ENV FFTW_INC NO_DEFAULT_PATH)
FIND_PATH (FFTW3_INCLUDE_DIR fftw3.h PATHS /usr/include /sw/include)
FIND_PATH (PNG_INCLUDE_DIR png.h PATHS ENV PNG_INC NO_DEFAULT_PATH)
FIND_PATH (PNG_INCLUDE_DIR png.h PATHS /usr/include /sw/include)
FIND_PATH (LIBCONFIG_INCLUDE_DIR libconfig.h PATHS ENV CONFIG_INC NO_DEFAULT_PATH) 
FIND_PATH (LIBCONFIG_INCLUDE_DIR libconfig.h PATHS /usr/include /sw/include) 
FIND_PATH (NFFT_INCLUDE_DIR nfft/nfft3.h PATHS ENV NFFT_INC NO_DEFAULT_PATH)
FIND_PATH (NFFT_INCLUDE_DIR nfft/nfft3.h PATHS /usr/include /sw/include)
FIND_PATH (GSL_INCLUDE_DIR gsl PATHS ENV GSL_INC NO_DEFAULT_PATH)
FIND_PATH (GSL_INCLUDE_DIR gsl PATHS /usr/include /sw/include)


FIND_LIBRARY (SPIMAGE_LIBRARY spimage PATHS ENV SPIMAGE_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (SPIMAGE_LIBRARY spimage PATHS /usr/lib /sw/lib)
FIND_LIBRARY (LIBCONFIG_LIBRARY config /usr/lib /sw/lib ENV CONFIG_LIB)
FIND_LIBRARY (HDF5_LIBRARY hdf5 PATHS ENV HDF5_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (HDF5_LIBRARY hdf5 PATHS /usr/lib /sw/lib)
FIND_LIBRARY (TIFF_LIBRARY tiff PATHS ENV TIFF_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (TIFF_LIBRARY tiff /usr/lib /sw/lib)
FIND_LIBRARY (PNG_LIBRARY png PATHS ENV PNG_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (PNG_LIBRARY png /usr/lib /sw/lib)
FIND_LIBRARY (MATH_LIBRARY m PATHS /usr/lib /sw/lib)
FIND_LIBRARY (C_LIBRARY c /usr/lib /sw/lib)
FIND_LIBRARY (Z_LIBRARY z /usr/lib /sw/lib)
FIND_LIBRARY (JPEG_LIBRARY jpeg PATHS ENV JPEG_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (JPEG_LIBRARY jpeg PATHS /usr/lib /sw/lib)
FIND_LIBRARY (NFFT_LIBRARY nfft3 PATHS ENV NFFT_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (NFFT_LIBRARY nfft3 /usr/lib /sw/lib)
FIND_LIBRARY (GSL_LIBRARY gsl PATHS ENV GSL_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (GSL_LIBRARY gsl /usr/lib /sw/lib)
FIND_LIBRARY (GSLCBLAS_LIBRARY gslcblas PATHS ENV GSL_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (GSLCBLAS_LIBRARY gslcblas /usr/lib /sw/lib)

IF(WIN32)
FIND_LIBRARY (FFTW3_LIBRARY fftw3 ENV FFTW_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (FFTW3_LIBRARY fftw3 /usr/lib /sw/lib ENV FFTW_LIB)
ELSE(WIN32)
FIND_LIBRARY (FFTW3_LIBRARY fftw3 ENV FFTW_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (FFTW3_LIBRARY fftw3 /usr/lib /sw/lib ENV FFTW_LIB)
FIND_LIBRARY (FFTW3F_LIBRARY fftw3f ENV FFTW_LIB NO_DEFAULT_PATH)
FIND_LIBRARY (FFTW3F_LIBRARY fftw3f /usr/lib /sw/lib ENV FFTW_LIB)
FIND_LIBRARY (FFTW3F_THREADS_LIBRARY fftw3f_threads  ENV FFTW_LIB NO_DEFAULT_PATH)	
FIND_LIBRARY (FFTW3F_THREADS_LIBRARY fftw3f_threads /usr/lib /sw/lib ENV FFTW_LIB)	
FIND_LIBRARY (PTHREAD_LIBRARY pthread /usr/lib /sw/lib)	
ENDIF(WIN32)
SET(FFTW_LIBRARY ${FFTW3_LIBRARY} ${FFTW3F_LIBRARY} ${FFTW3F_THREADS_LIBRARY} ${PTHREAD_LIBRARY})

SET(MPI OFF CACHE BOOL "If ON use MPI for parallelization if possible.")


IF(MPI)	
	ADD_DEFINITIONS(-DMPI)	
	SET(CMAKE_C_COMPILER mpicc)
	SET(CMAKE_CXX_COMPILER mpic++)
ENDIF(MPI)


IF(WIN32)
SET (GETOPT utils/getopt.c)
ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
ELSE(WIN32)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -Wall -std=c99 -g")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Wall -g ")
ENDIF(WIN32)

LIST(APPEND SPSIM_LIBRARY_LIST ${SPIMAGE_LIBRARY} ${LIBCONFIG_LIBRARY} ${MATH_LIBRARY} ${HDF5_LIBRARY} ${TIFF_LIBRARY} ${PNG_LIBRARY} ${FFTW_LIBRARY} ${NFFT_LIBRARY} ${GSL_LIBRARY} ${GSLCBLAS_LIBRARY})



INCLUDE_DIRECTORIES(${SPIMAGE_INCLUDE_DIR} ${LIBCONFIG_INCLUDE_DIR} ${TIFF_INCLUDE_DIR} ${HDF5_INCLUDE_DIR} ${FFTW3_INCLUDE_DIR} ${PNG_INCLUDE_DIR} saddle ${NFFT_INCLUDE_DIR})
ADD_EXECUTABLE(spsim spsim.c config.c diffraction.c molecule.c io.c mpi.c noise.cpp amplification.c real_space.c)
ADD_EXECUTABLE(box_deconvolute box_deconvolute.c config.c diffraction.c molecule.c io.c mpi.c noise.cpp amplification.c real_space.c)

ADD_EXECUTABLE(image_integrate image_integrate.c)
TARGET_LINK_LIBRARIES(spsim ${SPSIM_LIBRARY_LIST})
TARGET_LINK_LIBRARIES(box_deconvolute ${SPSIM_LIBRARY_LIST})


TARGET_LINK_LIBRARIES(image_integrate ${SPIMAGE_LIBRARY} ${LIBCONFIG_LIBRARY} ${MATH_LIBRARY} ${HDF5_LIBRARY} ${TIFF_LIBRARY} ${PNG_LIBRARY} ${FFTW_LIBRARY})

INSTALL(TARGETS spsim image_integrate box_deconvolute
            RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
            LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
            ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/static)
